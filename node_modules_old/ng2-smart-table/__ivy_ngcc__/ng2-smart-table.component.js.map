{"version":3,"sources":["C:/temp/ControleMedico/AppControleMedico/node_modules/ng2-smart-table/ng2-smart-table.component.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLM","file":"ng2-smart-table.component.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Grid } from './lib/grid';\nimport { DataSource } from './lib/data-source/data-source';\nimport { deepExtend } from './lib/helpers';\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\nvar Ng2SmartTableComponent = (function () {\n    function Ng2SmartTableComponent() {\n        this.settings = {};\n        this.rowSelect = new EventEmitter();\n        this.userRowSelect = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.edit = new EventEmitter();\n        this.create = new EventEmitter();\n        this.custom = new EventEmitter();\n        this.deleteConfirm = new EventEmitter();\n        this.editConfirm = new EventEmitter();\n        this.createConfirm = new EventEmitter();\n        this.rowHover = new EventEmitter();\n        this.defaultSettings = {\n            mode: 'inline',\n            selectMode: 'single',\n            hideHeader: false,\n            hideSubHeader: false,\n            actions: {\n                columnTitle: 'Actions',\n                add: true,\n                edit: true,\n                delete: true,\n                custom: [],\n                position: 'left',\n            },\n            filter: {\n                inputClass: '',\n            },\n            edit: {\n                inputClass: '',\n                editButtonContent: 'Edit',\n                saveButtonContent: 'Update',\n                cancelButtonContent: 'Cancel',\n                confirmSave: false,\n            },\n            add: {\n                inputClass: '',\n                addButtonContent: 'Add New',\n                createButtonContent: 'Create',\n                cancelButtonContent: 'Cancel',\n                confirmCreate: false,\n            },\n            delete: {\n                deleteButtonContent: 'Delete',\n                confirmDelete: false,\n            },\n            attr: {\n                id: '',\n                class: '',\n            },\n            noDataMessage: 'No data found',\n            columns: {},\n            pager: {\n                display: true,\n                perPage: 10,\n            },\n            rowClassFunction: function () { return \"\"; }\n        };\n        this.isAllSelected = false;\n    }\n    Ng2SmartTableComponent.prototype.ngOnChanges = function (changes) {\n        if (this.grid) {\n            if (changes['settings']) {\n                this.grid.setSettings(this.prepareSettings());\n            }\n            if (changes['source']) {\n                this.source = this.prepareSource();\n                this.grid.setSource(this.source);\n            }\n        }\n        else {\n            this.initGrid();\n        }\n        this.tableId = this.grid.getSetting('attr.id');\n        this.tableClass = this.grid.getSetting('attr.class');\n        this.isHideHeader = this.grid.getSetting('hideHeader');\n        this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.isPagerDisplay = this.grid.getSetting('pager.display');\n        this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\n        this.rowClassFunction = this.grid.getSetting('rowClassFunction');\n    };\n    Ng2SmartTableComponent.prototype.editRowSelect = function (row) {\n        if (this.grid.getSetting('selectMode') === 'multi') {\n            this.onMultipleSelectRow(row);\n        }\n        else {\n            this.onSelectRow(row);\n        }\n    };\n    Ng2SmartTableComponent.prototype.onUserSelectRow = function (row) {\n        if (this.grid.getSetting('selectMode') !== 'multi') {\n            this.grid.selectRow(row);\n            this.emitUserSelectRow(row);\n            this.emitSelectRow(row);\n        }\n    };\n    Ng2SmartTableComponent.prototype.onRowHover = function (row) {\n        this.rowHover.emit(row);\n    };\n    Ng2SmartTableComponent.prototype.multipleSelectRow = function (row) {\n        this.grid.multipleSelectRow(row);\n        this.emitUserSelectRow(row);\n        this.emitSelectRow(row);\n    };\n    Ng2SmartTableComponent.prototype.onSelectAllRows = function ($event) {\n        this.isAllSelected = !this.isAllSelected;\n        this.grid.selectAllRows(this.isAllSelected);\n        this.emitUserSelectRow(null);\n        this.emitSelectRow(null);\n    };\n    Ng2SmartTableComponent.prototype.onSelectRow = function (row) {\n        this.grid.selectRow(row);\n        this.emitSelectRow(row);\n    };\n    Ng2SmartTableComponent.prototype.onMultipleSelectRow = function (row) {\n        this.emitSelectRow(row);\n    };\n    Ng2SmartTableComponent.prototype.initGrid = function () {\n        var _this = this;\n        this.source = this.prepareSource();\n        this.grid = new Grid(this.source, this.prepareSettings());\n        this.grid.onSelectRow().subscribe(function (row) { return _this.emitSelectRow(row); });\n    };\n    Ng2SmartTableComponent.prototype.prepareSource = function () {\n        if (this.source instanceof DataSource) {\n            return this.source;\n        }\n        else if (this.source instanceof Array) {\n            return new LocalDataSource(this.source);\n        }\n        return new LocalDataSource();\n    };\n    Ng2SmartTableComponent.prototype.prepareSettings = function () {\n        return deepExtend({}, this.defaultSettings, this.settings);\n    };\n    Ng2SmartTableComponent.prototype.changePage = function ($event) {\n        this.resetAllSelector();\n    };\n    Ng2SmartTableComponent.prototype.sort = function ($event) {\n        this.resetAllSelector();\n    };\n    Ng2SmartTableComponent.prototype.filter = function ($event) {\n        this.resetAllSelector();\n    };\n    Ng2SmartTableComponent.prototype.resetAllSelector = function () {\n        this.isAllSelected = false;\n    };\n    Ng2SmartTableComponent.prototype.emitUserSelectRow = function (row) {\n        var selectedRows = this.grid.getSelectedRows();\n        this.userRowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n            selected: selectedRows && selectedRows.length ? selectedRows.map(function (r) { return r.getData(); }) : [],\n        });\n    };\n    Ng2SmartTableComponent.prototype.emitSelectRow = function (row) {\n        this.rowSelect.emit({\n            data: row ? row.getData() : null,\n            isSelected: row ? row.getIsSelected() : null,\n            source: this.source,\n        });\n    };\n    return Ng2SmartTableComponent;\n}());\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"source\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"settings\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"rowSelect\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"userRowSelect\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"delete\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"edit\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"create\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"custom\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"deleteConfirm\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"editConfirm\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], Ng2SmartTableComponent.prototype, \"createConfirm\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], Ng2SmartTableComponent.prototype, \"rowHover\", void 0);\nNg2SmartTableComponent = __decorate([\n    Component({\n        selector: 'ng2-smart-table',\n        styles: [\":host{font-size:1rem}:host /deep/ *{box-sizing:border-box}:host /deep/ button,:host /deep/ input,:host /deep/ optgroup,:host /deep/ select,:host /deep/ textarea{color:inherit;font:inherit;margin:0}:host /deep/ table{line-height:1.5em;border-collapse:collapse;border-spacing:0;display:table;width:100%;max-width:100%;overflow:auto;word-break:normal;word-break:keep-all}:host /deep/ table tr th{font-weight:700}:host /deep/ table tr section{font-size:.75em;font-weight:700}:host /deep/ table tr td,:host /deep/ table tr th{font-size:.875em;margin:0;padding:.5em 1em}:host /deep/ a{color:#1e6bb8;text-decoration:none}:host /deep/ a:hover{text-decoration:underline} /*# sourceMappingURL=ng2-smart-table.component.css.map */ \"],\n        template: \"<table [id]=\\\"tableId\\\" [ngClass]=\\\"tableClass\\\"><thead ng2-st-thead *ngIf=\\\"!isHideHeader || !isHideSubHeader\\\" [grid]=\\\"grid\\\" [isAllSelected]=\\\"isAllSelected\\\" [source]=\\\"source\\\" [createConfirm]=\\\"createConfirm\\\" (create)=\\\"create.emit($event)\\\" (selectAllRows)=\\\"onSelectAllRows($event)\\\" (sort)=\\\"sort($event)\\\" (filter)=\\\"filter($event)\\\"></thead><tbody ng2-st-tbody [grid]=\\\"grid\\\" [source]=\\\"source\\\" [deleteConfirm]=\\\"deleteConfirm\\\" [editConfirm]=\\\"editConfirm\\\" [rowClassFunction]=\\\"rowClassFunction\\\" (edit)=\\\"edit.emit($event)\\\" (delete)=\\\"delete.emit($event)\\\" (custom)=\\\"custom.emit($event)\\\" (userSelectRow)=\\\"onUserSelectRow($event)\\\" (editRowSelect)=\\\"editRowSelect($event)\\\" (multipleSelectRow)=\\\"multipleSelectRow($event)\\\" (rowHover)=\\\"onRowHover($event)\\\"></tbody></table><ng2-smart-table-pager *ngIf=\\\"isPagerDisplay\\\" [source]=\\\"source\\\" [perPageSelect]=\\\"perPageSelect\\\" (changePage)=\\\"changePage($event)\\\"></ng2-smart-table-pager>\",\n    })\n], Ng2SmartTableComponent);\nexport { Ng2SmartTableComponent };\n"]}