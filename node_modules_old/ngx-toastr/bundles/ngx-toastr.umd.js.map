{"version":3,"file":"ngx-toastr.umd.js.map","sources":["ng://ngx-toastr/toastr/toast.directive.ts","ng://ngx-toastr/toastr/toastr-config.ts","ng://ngx-toastr/portal/portal.ts","ng://ngx-toastr/portal/dom-portal-host.ts","ng://ngx-toastr/overlay/overlay-ref.ts","ng://ngx-toastr/overlay/overlay-container.ts","ng://ngx-toastr/overlay/overlay.ts","ng://ngx-toastr/toastr/toast-injector.ts","ng://ngx-toastr/toastr/toast-token.ts","ng://ngx-toastr/toastr/toastr.service.ts","ng://ngx-toastr/toastr/toast.component.ts","ng://ngx-toastr/toastr/default-config.ts","ng://ngx-toastr/toastr/toastr.module.ts","ng://ngx-toastr/toastr/toast-noanimation.component.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  NgModule,\n} from '@angular/core';\n\n@Directive({\n  selector: '[toastContainer]',\n  exportAs: 'toastContainer',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) { }\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  declarations: [ToastContainerDirective],\n  exports: [ToastContainerDirective],\n})\nexport class ToastContainerModule {}\n","import { SafeHtml } from '@angular/platform-browser';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport { ComponentType } from '../portal/portal';\nimport { ToastRef } from './toast-injector';\n\n/**\n * Configuration for an individual toast.\n */\n export interface IndividualConfig {\n  /**\n   * disable both timeOut and extendedTimeOut\n   * default: false\n   */\n  disableTimeOut: boolean;\n  /**\n  * toast time to live in milliseconds\n  * default: 5000\n  */\n  timeOut: number;\n  /**\n  * toast show close button\n  * default: false\n  */\n  closeButton: boolean;\n  /**\n  * time to close after a user hovers over toast\n  * default: 1000\n   */\n  extendedTimeOut: number;\n  /**\n   * show toast progress bar\n   * default: false\n   */\n  progressBar: boolean;\n\n  /**\n   * changes toast progress bar animation\n   * default: decreasing\n   */\n  progressAnimation?: 'increasing' | 'decreasing';\n  /**\n   * render html in toast message (possibly unsafe)\n   * default: false\n   */\n  enableHtml: boolean;\n  /**\n   * css class on toast component\n   * default: toast\n   */\n  toastClass: string;\n  /**\n   * css class on toast container\n   * default: toast-top-right\n   */\n  positionClass: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  titleClass: string;\n  /**\n   * css class on to toast title\n   * default: toast-title\n   */\n  messageClass: string;\n  /**\n   * animation easing on toast\n   * default: ease-in\n   */\n  easing: string;\n  /**\n   * animation ease time on toast\n   * default: 300\n   */\n  easeTime: string | number;\n  /**\n   * clicking on toast dismisses it\n   * default: true\n   */\n  tapToDismiss: boolean;\n  /**\n   * Angular toast component to be shown\n   * default: Toast\n   */\n  toastComponent: ComponentType<any>;\n  /**\n   * Helps show toast from a websocket or from event outside Angular\n   * default: false\n   */\n  onActivateTick: boolean;\n}\n\nexport interface ToastrIconClasses {\n  error: string;\n  info: string;\n  success: string;\n  warning: string;\n}\n\n/**\n * Global Toast configuration\n * Includes all IndividualConfig\n */\nexport interface GlobalConfig extends IndividualConfig {\n  /**\n   * max toasts opened. Toasts will be queued\n   * Zero is unlimited\n   * default: 0\n   */\n  maxOpened: number;\n  /**\n   * dismiss current toast when max is reached\n   * default: false\n   */\n  autoDismiss: boolean;\n  iconClasses: Partial<ToastrIconClasses>;\n  /**\n   * New toast placement\n   * default: true\n   */\n  newestOnTop: boolean;\n  /**\n   * block duplicate messages\n   * default: false\n   */\n  preventDuplicates: boolean;\n}\n\n/**\n * Everything a toast needs to launch\n */\nexport class ToastPackage {\n  private _onTap = new Subject<any>();\n  private _onAction = new Subject<any>();\n\n  constructor(\n    public toastId: number,\n    public config: IndividualConfig,\n    public message: string | SafeHtml | null | undefined,\n    public title: string | undefined,\n    public toastType: string,\n    public toastRef: ToastRef<any>,\n  ) {\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n\n  onTap(): Observable<any> {\n    return this._onTap.asObservable();\n  }\n\n  /** available for use in custom toast */\n  triggerAction(action?: any) {\n    this._onAction.next(action);\n  }\n\n  onAction(): Observable<any> {\n    return this._onAction.asObservable();\n  }\n}\n\n/* tslint:disable:no-empty-interface */\nexport interface GlobalToastrConfig extends GlobalConfig {}\nexport interface IndividualToastrConfig extends IndividualConfig {}\nexport interface ToastrConfig extends IndividualConfig {}\n","import {\n  ComponentRef,\n  Injector,\n  ViewContainerRef\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  private _attachedHost?: BasePortalHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(component: ComponentType<T>, injector: Injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host?: BasePortalHost) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nexport abstract class BasePortalHost {\n  /** The portal currently attached to the host. */\n  private _attachedPortal?: ComponentPortal<any>;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn?: () => void;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n    private _hostDomElement: Element,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n  ) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(\n    portal: ComponentPortal<T>,\n    newestOnTop: boolean,\n  ): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(\n      portal.component,\n    );\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(\n        this._getComponentRootNode(componentRef),\n        this._hostDomElement.firstChild,\n      );\n    } else {\n      this._hostDomElement.appendChild(\n        this._getComponentRootNode(componentRef),\n      );\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n","import { ComponentRef } from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(private _portalHost: BasePortalHost) {}\n\n  attach(\n    portal: ComponentPortal<any>,\n    newestOnTop: boolean = true,\n  ): ComponentRef<any> {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n","/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport class OverlayContainer {\n  private _containerElement: HTMLElement;\n\n  /**\n   * This method returns the overlay container element.  It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  private _createContainer(): void {\n    const container = document.createElement('div');\n    container.classList.add('overlay-container');\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable } from '@angular/core';\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { OverlayRef } from './overlay-ref';\n\nimport { ToastContainerDirective } from '../toastr/toast.directive';\nimport { OverlayContainer } from './overlay-container';\n\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n @Injectable()\n  export class Overlay {\n    private _paneElements: {string?: HTMLElement} = {};\n    constructor(private _overlayContainer: OverlayContainer,\n                private _componentFactoryResolver: ComponentFactoryResolver,\n                private _appRef: ApplicationRef) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass?: string, overlayContainer?: ToastContainerDirective): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(positionClass: string = '', overlayContainer?: ToastContainerDirective): HTMLElement {\n    if (!this._paneElements[positionClass]) {\n      this._paneElements[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements[positionClass];\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    const pane = document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n    pane.classList.add('toast-container');\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane));\n  }\n}\n\n\n/** Providers for Overlay and its related injectables. */\nexport const OVERLAY_PROVIDERS = [\n  Overlay,\n  OverlayContainer,\n];\n","import { Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { OverlayRef } from '../overlay/overlay-ref';\nimport { ToastPackage } from './toastr-config';\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the toast. */\n  componentInstance: T;\n\n  /** Subject for notifying the user that the toast has finished closing. */\n  private _afterClosed = new Subject<any>();\n  /** triggered when toast is activated */\n  private _activate = new Subject<any>();\n  /** notifies the toast that it should close before the timeout */\n  private _manualClose = new Subject<any>();\n\n  constructor(private _overlayRef: OverlayRef) { }\n\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n\n  manualClosed(): Observable<any> {\n    return this._manualClose.asObservable();\n  }\n\n  /**\n   * Close the toast.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  isInactive() {\n    return this._activate.isStopped;\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n}\n\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _toastPackage: ToastPackage,\n    private _parentInjector: Injector) { }\n\n  get(token: any, notFoundValue?: any): any {\n    if (token === ToastPackage && this._toastPackage) {\n      return this._toastPackage;\n    }\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { GlobalConfig } from './toastr-config';\n\nexport interface ToastToken {\n  config: GlobalConfig;\n  defaults: any;\n}\n\nexport const TOAST_CONFIG = new InjectionToken<ToastToken>('ToastConfig');\n","import {\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  SecurityContext\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { Observable } from 'rxjs';\n\nimport { Overlay } from '../overlay/overlay';\nimport { ComponentPortal } from '../portal/portal';\nimport { ToastInjector, ToastRef } from './toast-injector';\nimport { ToastToken, TOAST_CONFIG } from './toast-token';\nimport { ToastContainerDirective } from './toast.directive';\nimport {\n  GlobalConfig,\n  IndividualConfig,\n  ToastPackage,\n} from './toastr-config';\n\n\nexport interface ActiveToast<C> {\n  /** Your Toast ID. Use this to close it individually */\n  toastId: number;\n  /** the message of your toast. Stored to prevent duplicates */\n  message: string;\n  /** a reference to the component see portal.ts */\n  portal: ComponentRef<C>;\n  /** a reference to your toast */\n  toastRef: ToastRef<C>;\n  /** triggered when toast is active */\n  onShown: Observable<any>;\n  /** triggered when toast is destroyed */\n  onHidden: Observable<any>;\n  /** triggered on toast click */\n  onTap: Observable<any>;\n  /** available for your use in custom toast */\n  onAction: Observable<any>;\n}\n\n@Injectable()\nexport class ToastrService {\n  toastrConfig: GlobalConfig;\n  currentlyActive = 0;\n  toasts: ActiveToast<any>[] = [];\n  overlayContainer: ToastContainerDirective;\n  previousToastMessage: string | undefined;\n  private index = 0;\n\n  constructor(\n    @Inject(TOAST_CONFIG) token: ToastToken,\n    private overlay: Overlay,\n    private _injector: Injector,\n    private sanitizer: DomSanitizer,\n    private ngZone: NgZone\n  ) {\n    const defaultConfig = new token.defaults;\n    this.toastrConfig = { ...defaultConfig, ...token.config };\n    this.toastrConfig.iconClasses = {\n      ...defaultConfig.iconClasses,\n      ...token.config.iconClasses,\n    };\n  }\n  /** show toast */\n  show(message?: string, title?: string, override: Partial<IndividualConfig> = {}, type = '') {\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show successful toast */\n  success(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.success || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show error toast */\n  error(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.error || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show info toast */\n  info(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.info || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /** show warning toast */\n  warning(message?: string, title?: string, override: Partial<IndividualConfig> = {}) {\n    const type = this.toastrConfig.iconClasses.warning || '';\n    return this._preBuildNotification(type, message, title, this.applyConfig(override));\n  }\n  /**\n   * Remove all or a single toast by id\n   */\n  clear(toastId?: number) {\n    // Call every toastRef manualClose function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.toastRef.manualClose();\n          return;\n        }\n      } else {\n        toast.toastRef.manualClose();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  remove(toastId: number) {\n    const found = this._findToast(toastId);\n    if (!found) {\n      return false;\n    }\n    found.activeToast.toastRef.close();\n    this.toasts.splice(found.index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].toastRef;\n      if (!p.isInactive()) {\n        this.currentlyActive = this.currentlyActive + 1;\n        p.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determines if toast message is already shown\n   */\n  isDuplicate(message: string) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** create a clone of global config and apply individual settings */\n  private applyConfig(override: Partial<IndividualConfig> = {}): GlobalConfig {\n    return { ...this.toastrConfig, ...override };\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number, activeToast: ActiveToast<any> } | null {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Determines the need to run inside angular's zone then builds the toast\n   */\n  private _preBuildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast<any> | null {\n    if (config.onActivateTick) {\n      return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n    }\n    return this._buildNotification(toastType, message, title, config);\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   * returns null if toast is duplicate and preventDuplicates == True\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string | undefined,\n    title: string | undefined,\n    config: GlobalConfig,\n  ): ActiveToast<any> | null {\n    if (!config.toastComponent) {\n      throw new Error('toastComponent required');\n    }\n    // max opened and auto dismiss = true\n    if (message && this.toastrConfig.preventDuplicates && this.isDuplicate(message)) {\n      return null;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n    this.index = this.index + 1;\n    let sanitizedMessage: string | SafeHtml | undefined | null = message;\n    if (message && config.enableHtml) {\n      sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n    }\n    const toastRef = new ToastRef(overlayRef);\n    const toastPackage = new ToastPackage(\n      this.index,\n      config,\n      sanitizedMessage,\n      title,\n      toastType,\n      toastRef,\n    );\n    const toastInjector = new ToastInjector(toastPackage, this._injector);\n    const component = new ComponentPortal(config.toastComponent, toastInjector);\n    const portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n    toastRef.componentInstance = (<any>portal)._component;\n    const ins: ActiveToast<any> = {\n      toastId: this.index,\n      message: message || '',\n      toastRef,\n      onShown: toastRef.afterActivate(),\n      onHidden: toastRef.afterClosed(),\n      onTap: toastPackage.onTap(),\n      onAction: toastPackage.onAction(),\n      portal,\n    };\n\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport {\n  Component,\n  HostBinding,\n  HostListener,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\n\nimport { Subscription } from 'rxjs';\n\nimport { IndividualConfig, ToastPackage } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n    {{ title }}\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alertdialog\" aria-live=\"polite\"\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\n    {{ message }}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        display: 'none',\n        opacity: 0,\n      })),\n      state('active', style({})),\n      state('removed', style({ opacity: 0 })),\n      transition('inactive => active',\n        animate('{{ easeTime }}ms {{ easing }}')\n      ),\n      transition('active => removed',\n        animate('{{ easeTime }}ms {{ easing }}'),\n      ),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class Toast implements OnDestroy {\n  message?: string | SafeHtml | null;\n  title?: string;\n  options: IndividualConfig;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut') state = {\n    value: 'inactive',\n    params: {\n      easeTime: this.toastPackage.config.easeTime,\n      easing: 'ease-in',\n    },\n  };\n  private timeout: any;\n  private intervalId: any;\n  private hideTime: number;\n  private sub: Subscription;\n  private sub1: Subscription;\n\n  constructor(\n    protected toastrService: ToastrService,\n    public toastPackage: ToastPackage,\n    protected ngZone?: NgZone,\n  ) {\n    this.message = toastPackage.message;\n    this.title = toastPackage.title;\n    this.options = toastPackage.config;\n    this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n      this.activateToast();\n    });\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n      this.remove();\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.sub1.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = { ...this.state, value: 'active' };\n    if (!this.options.disableTimeOut && this.options.timeOut) {\n      this.outsideTimeout(() => this.remove(), this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.options.progressAnimation === 'increasing') {\n      this.width = 100 - this.width;\n    }\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n    if (this.width >= 100) {\n      this.width = 100;\n    }\n  }\n\n  /**\n   * tells toastrService to remove this toast after animation time\n   */\n  remove() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = {...this.state, value: 'removed'};\n    this.outsideTimeout(() =>\n        this.toastrService.remove(this.toastPackage.toastId),\n        +this.toastPackage.config.easeTime,\n      );\n  }\n  @HostListener('click')\n  tapToast() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    this.toastPackage.triggerTap();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state.value === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (this.options.disableTimeOut\n      || this.options.extendedTimeOut === 0\n      || this.state.value === 'removed') {\n      return;\n    }\n    this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n    this.width = -1;\n    if (this.options.progressBar) {\n      this.outsideInterval(() => this.updateProgress(), 10);\n    }\n  }\n\n  outsideTimeout(func: Function, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() =>\n        this.timeout = setTimeout(() => this.runInsideAngular(func), timeout)\n      );\n    } else {\n      this.timeout = setTimeout(() => func(), timeout);\n    }\n  }\n\n  outsideInterval(func: Function, timeout: number) {\n    if (this.ngZone) {\n      this.ngZone.runOutsideAngular(() =>\n        this.intervalId = setInterval(() => this.runInsideAngular(func), timeout)\n      );\n    } else {\n      this.intervalId = setInterval(() => func(), timeout);\n    }\n  }\n\n  private runInsideAngular(func: Function) {\n    if (this.ngZone) {\n      this.ngZone.run(() => func());\n    } else {\n      func();\n    }\n  }\n\n}\n","import { Toast } from './toast.component';\nimport { GlobalConfig } from './toastr-config';\n\nexport class DefaultGlobalConfig implements GlobalConfig {\n  // Global\n  maxOpened = 0;\n  autoDismiss = false;\n  newestOnTop = true;\n  preventDuplicates = false;\n  iconClasses = {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning',\n  };\n\n  // Individual\n  toastComponent = Toast;\n  closeButton = false;\n  disableTimeOut: false;\n  timeOut = 5000;\n  extendedTimeOut = 1000;\n  enableHtml = false;\n  progressBar = false;\n  toastClass = 'toast';\n  positionClass = 'toast-top-right';\n  titleClass = 'toast-title';\n  messageClass = 'toast-message';\n  easing = 'ease-in';\n  easeTime = 300;\n  tapToDismiss = true;\n  onActivateTick = false;\n  progressAnimation: 'decreasing' | 'increasing' = 'decreasing';\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\n\nimport { Overlay } from '../overlay/overlay';\nimport { OverlayContainer } from '../overlay/overlay-container';\nimport { DefaultGlobalConfig } from './default-config';\nimport { TOAST_CONFIG } from './toast-token';\nimport { Toast } from './toast.component';\nimport { GlobalConfig } from './toastr-config';\nimport { ToastrService } from './toastr.service';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [Toast],\n  declarations: [Toast],\n  entryComponents: [Toast],\n})\nexport class ToastrModule {\n  constructor(@Optional() @SkipSelf() parentModule: ToastrModule) {\n    if (parentModule) {\n      throw new Error('ToastrModule is already loaded. It should only be imported in your application\\'s main module.');\n    }\n  }\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        { provide: TOAST_CONFIG, useValue: { config, defaults: DefaultGlobalConfig } },\n        OverlayContainer,\n        Overlay,\n        ToastrService,\n      ],\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\r\nimport {\r\n  ApplicationRef,\r\n  Component,\r\n  HostBinding,\r\n  HostListener,\r\n  NgModule,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { IndividualConfig, ToastPackage } from './toastr-config';\r\nimport { ToastrService } from './toastr.service';\r\n\r\n@Component({\r\n  selector: '[toast-component]',\r\n  template: `\r\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n  <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\r\n    {{ title }}\r\n  </div>\r\n  <div *ngIf=\"message && options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [innerHTML]=\"message\">\r\n  </div>\r\n  <div *ngIf=\"message && !options.enableHtml\" role=\"alert\" aria-live=\"polite\"\r\n    [class]=\"options.messageClass\" [attr.aria-label]=\"message\">\r\n    {{ message }}\r\n  </div>\r\n  <div *ngIf=\"options.progressBar\">\r\n    <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\r\n  </div>\r\n  `,\r\n})\r\nexport class ToastNoAnimation implements OnDestroy {\r\n  message?: string | SafeHtml | null;\r\n  title?: string;\r\n  options: IndividualConfig;\r\n  /** width of progress bar */\r\n  width = -1;\r\n  /** a combination of toast type and options.toastClass */\r\n  @HostBinding('class') toastClasses = '';\r\n\r\n  @HostBinding('style.display')\r\n  get displayStyle() {\r\n    if (this.state === 'inactive') {\r\n      return 'none';\r\n    }\r\n    return 'inherit';\r\n  }\r\n\r\n  /** controls animation */\r\n  state = 'inactive';\r\n  private timeout: any;\r\n  private intervalId: any;\r\n  private hideTime: number;\r\n  private sub: Subscription;\r\n  private sub1: Subscription;\r\n\r\n  constructor(\r\n    protected toastrService: ToastrService,\r\n    public toastPackage: ToastPackage,\r\n    protected appRef: ApplicationRef,\r\n  ) {\r\n    this.message = toastPackage.message;\r\n    this.title = toastPackage.title;\r\n    this.options = toastPackage.config;\r\n    this.toastClasses = `${toastPackage.toastType} ${\r\n      toastPackage.config.toastClass\r\n    }`;\r\n    this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\r\n      this.activateToast();\r\n    });\r\n    this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\r\n      this.remove();\r\n    });\r\n  }\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.sub1.unsubscribe();\r\n    clearInterval(this.intervalId);\r\n    clearTimeout(this.timeout);\r\n  }\r\n  /**\r\n   * activates toast and sets timeout\r\n   */\r\n  activateToast() {\r\n    this.state = 'active';\r\n    if (!this.options.disableTimeOut && this.options.timeOut) {\r\n      this.timeout = setTimeout(() => {\r\n        this.remove();\r\n      }, this.options.timeOut);\r\n      this.hideTime = new Date().getTime() + this.options.timeOut;\r\n      if (this.options.progressBar) {\r\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n      }\r\n    }\r\n    if (this.options.onActivateTick) {\r\n      this.appRef.tick();\r\n    }\r\n  }\r\n  /**\r\n   * updates progress bar width\r\n   */\r\n  updateProgress() {\r\n    if (this.width === 0 || this.width === 100 || !this.options.timeOut) {\r\n      return;\r\n    }\r\n    const now = new Date().getTime();\r\n    const remaining = this.hideTime - now;\r\n    this.width = remaining / this.options.timeOut * 100;\r\n    if (this.options.progressAnimation === 'increasing') {\r\n      this.width = 100 - this.width;\r\n    }\r\n    if (this.width <= 0) {\r\n      this.width = 0;\r\n    }\r\n    if (this.width >= 100) {\r\n      this.width = 100;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tells toastrService to remove this toast after animation time\r\n   */\r\n  remove() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.state = 'removed';\r\n    this.timeout = setTimeout(\r\n      () => this.toastrService.remove(this.toastPackage.toastId),\r\n    );\r\n  }\r\n  @HostListener('click')\r\n  tapToast() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.toastPackage.triggerTap();\r\n    if (this.options.tapToDismiss) {\r\n      this.remove();\r\n    }\r\n  }\r\n  @HostListener('mouseenter')\r\n  stickAround() {\r\n    if (this.state === 'removed') {\r\n      return;\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.options.timeOut = 0;\r\n    this.hideTime = 0;\r\n\r\n    // disable progressBar\r\n    clearInterval(this.intervalId);\r\n    this.width = 0;\r\n  }\r\n  @HostListener('mouseleave')\r\n  delayedHideToast() {\r\n    if (this.options.disableTimeOut\r\n      || this.options.extendedTimeOut === 0\r\n      || this.state === 'removed') {\r\n      return;\r\n    }\r\n    this.timeout = setTimeout(\r\n      () => this.remove(),\r\n      this.options.extendedTimeOut,\r\n    );\r\n    this.options.timeOut = this.options.extendedTimeOut;\r\n    this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\r\n    this.width = -1;\r\n    if (this.options.progressBar) {\r\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\r\n    }\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ToastNoAnimation],\r\n  exports: [ToastNoAnimation],\r\n  entryComponents: [ToastNoAnimation],\r\n})\r\nexport class ToastNoAnimationModule {}\r\n"],"names":["Directive","ElementRef","NgModule","Subject","tslib_1.__extends","Injectable","ComponentFactoryResolver","ApplicationRef","InjectionToken","tslib_1.__values","SecurityContext","Inject","Injector","DomSanitizer","NgZone","Component","trigger","state","style","transition","animate","HostBinding","HostListener","CommonModule","Optional","SkipSelf"],"mappings":"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"}
