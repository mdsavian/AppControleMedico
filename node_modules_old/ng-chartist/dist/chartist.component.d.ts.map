{"version":3,"file":"chartist.component.d.ts","sources":["C:/temp/ControleMedico/AppControleMedico/node_modules/ng-chartist/dist/chartist.component.d.ts"],"sourcesContent":["/// <reference types=\"chartist\" />\nimport { ElementRef, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport * as Chartist from 'chartist';\n/**\n * Possible chart types\n * @type {String}\n */\nexport declare type ChartType = 'Pie' | 'Bar' | 'Line';\nexport declare type ChartInterfaces = Chartist.IChartistPieChart | Chartist.IChartistBarChart | Chartist.IChartistLineChart;\nexport declare type ChartOptions = Chartist.IBarChartOptions | Chartist.ILineChartOptions | Chartist.IPieChartOptions;\nexport declare type ResponsiveOptionTuple = Chartist.IResponsiveOptionTuple<ChartOptions>;\nexport declare type ResponsiveOptions = Array<ResponsiveOptionTuple>;\n/**\n * Represent a chart event.\n * For possible values, check the Chartist docs.\n */\nexport interface ChartEvent {\n    [eventName: string]: (data: any) => void;\n}\nexport declare class ChartistComponent implements OnInit, OnChanges, OnDestroy {\n    data: (Promise<Chartist.IChartistData> | Chartist.IChartistData);\n    type: (Promise<ChartType> | ChartType);\n    options: (Promise<Chartist.IChartOptions> | Chartist.IChartOptions);\n    responsiveOptions: (Promise<ResponsiveOptions> | ResponsiveOptions);\n    events: ChartEvent;\n    chart: ChartInterfaces;\n    private element;\n    constructor(element: ElementRef);\n    ngOnInit(): Promise<ChartInterfaces>;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    renderChart(): Promise<ChartInterfaces>;\n    update(changes: SimpleChanges): void;\n    bindEvents(chart: any): void;\n}\nexport declare class ChartistModule {\n}\ndeclare var _default: {\n    directives: typeof ChartistComponent[];\n};\nexport default _default;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}