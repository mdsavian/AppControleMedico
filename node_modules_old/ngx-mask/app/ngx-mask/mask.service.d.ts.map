{"version":3,"file":"mask.service.d.ts","sources":["C:/temp/ControleMedico/AppControleMedico/node_modules/ngx-mask/app/ngx-mask/mask.service.d.ts"],"sourcesContent":["import { ElementRef, Renderer2 } from '@angular/core';\nimport { IConfig } from './config';\nimport { MaskApplierService } from './mask-applier.service';\nexport declare class MaskService extends MaskApplierService {\n    private document;\n    protected _config: IConfig;\n    private _elementRef;\n    private _renderer;\n    validation: boolean;\n    maskExpression: string;\n    isNumberValue: boolean;\n    showMaskTyped: boolean;\n    maskIsShown: string;\n    selStart: number | null;\n    selEnd: number | null;\n    protected _formElement: HTMLInputElement;\n    onChange: (_: any) => void;\n    constructor(document: any, _config: IConfig, _elementRef: ElementRef, _renderer: Renderer2);\n    applyMask(inputValue: string, maskExpression: string, position?: number, cb?: Function): string;\n    applyValueChanges(position?: number, cb?: Function): void;\n    hideInput(inputValue: string, maskExpression: string): string;\n    getActualValue(res: string): string;\n    shiftTypedSymbols(inputValue: string): string;\n    showMaskInInput(inputVal?: string): string;\n    clearIfNotMatchFn(): void;\n    formElementProperty: [string, string | boolean];\n    checkSpecialCharAmount(mask: string): number;\n    private _checkForIp;\n    private formControlResult;\n    private _removeMask;\n    private _removePrefix;\n    private _removeSuffix;\n    private _regExpForRemove;\n    private _checkSymbols;\n    private testFn;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;"}