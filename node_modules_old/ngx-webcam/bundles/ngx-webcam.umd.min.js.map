{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-webcam/src/app/modules/webcam/domain/webcam-image.ts","ng://ngx-webcam/src/app/modules/webcam/util/webcam.util.ts","ng://ngx-webcam/src/app/modules/webcam/webcam/webcam.component.ts","ng://ngx-webcam/src/app/modules/webcam/webcam.module.ts","ng://ngx-webcam/src/app/modules/webcam/domain/webcam-init-error.ts","ng://ngx-webcam/src/app/modules/webcam/domain/webcam-mirror-properties.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","WebcamImage","imageAsDataUrl","mimeType","imageData","this","_mimeType","_imageAsBase64","_imageAsDataUrl","_imageData","getDataFromDataUrl","dataUrl","replace","prototype","WebcamUtil","getAvailableVideoInputs","navigator","mediaDevices","enumerateDevices","Promise","resolve","reject","then","devices","filter","device","kind","catch","err","message","WebcamComponent","width","height","videoOptions","WebcamComponent_1","DEFAULT_VIDEO_OPTIONS","allowCameraSwitch","captureImageData","imageType","DEFAULT_IMAGE_TYPE","imageQuality","DEFAULT_IMAGE_QUALITY","imageCapture","EventEmitter","initError","imageClick","cameraSwitched","availableVideoInputs","videoInitialized","activeVideoInputIndex","mediaStream","activeVideoSettings","trigger","_this","triggerSubscription","unsubscribe","subscribe","takeSnapshot","switchCamera","switchCameraSubscription","value","switchToVideoInput","rotateVideoInput","getMediaConstraintsForDevice","deviceId","baseMediaTrackConstraints","result","exact","getDeviceIdFromMediaStreamTrack","mediaStreamTrack","getSettings","getConstraints","deviceIdObj","getValueFromConstrainDOMString","getFacingModeFromMediaStreamTrack","facingMode","facingModeConstraint","isUserFacing","toLowerCase","constrainDOMString","String","Array","isArray","ngAfterViewInit","detectAvailableDevices","next","ngOnDestroy","stopMediaTracks","unsubscribeFromSubscriptions","_video","nativeVideoElement","dimensions","videoWidth","videoHeight","_canvas","canvas","nativeElement","context2d","getContext","drawImage","quality","toDataURL","getImageData","forward","increment","nextInputIndex","initWebcam","videoResize","videoRatio","getVideoAspectRatio","Math","min","classes","isMirrorImage","trim","video","videoElement","userVideoTrackConstraints","getUserMedia","videoTrackConstraints","stream","srcObject","play","getVideoTracks","activeDeviceId","findIndex","mediaDeviceInfo","mediaStreamError","getActiveVideoTrack","mirror","mirrorImage","x","getTracks","forEach","track","stop","tslib_1.__decorate","Input","Output","ViewChild","static","Observable","Component","selector","template","COMPONENTS","WebcamModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * Container class for a captured webcam image\r\n * @author basst314, davidshen84\r\n */\r\nexport class WebcamImage {\r\n\r\n  public constructor(imageAsDataUrl: string, mimeType: string, imageData: ImageData) {\r\n    this._mimeType = mimeType;\r\n    this._imageAsDataUrl = imageAsDataUrl;\r\n    this._imageData = imageData;\r\n  }\r\n\r\n  private readonly _mimeType: string = null;\r\n  private _imageAsBase64: string = null;\r\n  private readonly _imageAsDataUrl: string = null;\r\n  private readonly _imageData: ImageData = null;\r\n\r\n\r\n  /**\r\n   * Extracts the Base64 data out of the given dataUrl.\r\n   * @param dataUrl the given dataUrl\r\n   * @param mimeType the mimeType of the data\r\n   */\r\n  private static getDataFromDataUrl(dataUrl: string, mimeType: string) {\r\n    return dataUrl.replace(`data:${mimeType};base64,`, '');\r\n  }\r\n\r\n  /**\r\n   * Get the base64 encoded image data\r\n   * @returns base64 data of the image\r\n   */\r\n  public get imageAsBase64(): string {\r\n    return this._imageAsBase64 ? this._imageAsBase64\r\n      : this._imageAsBase64 = WebcamImage.getDataFromDataUrl(this._imageAsDataUrl, this._mimeType);\r\n  }\r\n\r\n  /**\r\n   * Get the encoded image as dataUrl\r\n   * @returns the dataUrl of the image\r\n   */\r\n  public get imageAsDataUrl(): string {\r\n    return this._imageAsDataUrl;\r\n  }\r\n\r\n  /**\r\n   * Get the ImageData object associated with the canvas' 2d context.\r\n   * @returns the ImageData of the canvas's 2d context.\r\n   */\r\n  public get imageData(): ImageData {\r\n    return this._imageData;\r\n  }\r\n\r\n}\r\n","export class WebcamUtil {\r\n\r\n  /**\r\n   * Lists available videoInput devices\r\n   * @returns a list of media device info.\r\n   */\r\n  public static getAvailableVideoInputs(): Promise<MediaDeviceInfo[]> {\r\n    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n      return Promise.reject('enumerateDevices() not supported.');\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      navigator.mediaDevices.enumerateDevices()\r\n        .then((devices: MediaDeviceInfo[]) => {\r\n          resolve(devices.filter((device: MediaDeviceInfo) => device.kind === 'videoinput'));\r\n        })\r\n        .catch(err => {\r\n          reject(err.message || err);\r\n        });\r\n    });\r\n  }\r\n}\r\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, ViewChild} from '@angular/core';\r\nimport {WebcamInitError} from '../domain/webcam-init-error';\r\nimport {WebcamImage} from '../domain/webcam-image';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {WebcamUtil} from '../util/webcam.util';\r\nimport {WebcamMirrorProperties} from '../domain/webcam-mirror-properties';\r\n\r\n@Component({\r\n  selector: 'webcam',\r\n  templateUrl: './webcam.component.html',\r\n  styleUrls: ['./webcam.component.scss']\r\n})\r\nexport class WebcamComponent implements AfterViewInit, OnDestroy {\r\n  private static DEFAULT_VIDEO_OPTIONS: MediaTrackConstraints = {facingMode: 'environment'};\r\n  private static DEFAULT_IMAGE_TYPE: string = 'image/jpeg';\r\n  private static DEFAULT_IMAGE_QUALITY: number = 0.92;\r\n\r\n  /** Defines the max width of the webcam area in px */\r\n  @Input() public width: number = 640;\r\n  /** Defines the max height of the webcam area in px */\r\n  @Input() public height: number = 480;\r\n  /** Defines base constraints to apply when requesting video track from UserMedia */\r\n  @Input() public videoOptions: MediaTrackConstraints = WebcamComponent.DEFAULT_VIDEO_OPTIONS;\r\n  /** Flag to enable/disable camera switch. If enabled, a switch icon will be displayed if multiple cameras were found */\r\n  @Input() public allowCameraSwitch: boolean = true;\r\n  /** Parameter to control image mirroring (i.e. for user-facing camera). [\"auto\", \"always\", \"never\"] */\r\n  @Input() public mirrorImage: string | WebcamMirrorProperties;\r\n  /** Flag to control whether an ImageData object is stored into the WebcamImage object. */\r\n  @Input() public captureImageData: boolean = false;\r\n  /** The image type to use when capturing snapshots */\r\n  @Input() public imageType: string = WebcamComponent.DEFAULT_IMAGE_TYPE;\r\n  /** The image quality to use when capturing snapshots (number between 0 and 1) */\r\n  @Input() public imageQuality: number = WebcamComponent.DEFAULT_IMAGE_QUALITY;\r\n\r\n  /** EventEmitter which fires when an image has been captured */\r\n  @Output() public imageCapture: EventEmitter<WebcamImage> = new EventEmitter<WebcamImage>();\r\n  /** Emits a mediaError if webcam cannot be initialized (e.g. missing user permissions) */\r\n  @Output() public initError: EventEmitter<WebcamInitError> = new EventEmitter<WebcamInitError>();\r\n  /** Emits when the webcam video was clicked */\r\n  @Output() public imageClick: EventEmitter<void> = new EventEmitter<void>();\r\n  /** Emits the active deviceId after the active video device was switched */\r\n  @Output() public cameraSwitched: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  /** available video devices */\r\n  public availableVideoInputs: MediaDeviceInfo[] = [];\r\n\r\n  /** Indicates whether the video device is ready to be switched */\r\n  public videoInitialized: boolean = false;\r\n\r\n  /** If the Observable represented by this subscription emits, an image will be captured and emitted through\r\n   * the 'imageCapture' EventEmitter */\r\n  private triggerSubscription: Subscription;\r\n  /** Index of active video in availableVideoInputs */\r\n  private activeVideoInputIndex: number = -1;\r\n  /** Subscription to switchCamera events */\r\n  private switchCameraSubscription: Subscription;\r\n  /** MediaStream object in use for streaming UserMedia data */\r\n  private mediaStream: MediaStream = null;\r\n  @ViewChild('video', { static: true }) private video: any;\r\n  /** Canvas for Video Snapshots */\r\n  @ViewChild('canvas', { static: true }) private canvas: any;\r\n\r\n  /** width and height of the active video stream */\r\n  private activeVideoSettings: MediaTrackSettings = null;\r\n\r\n  /**\r\n   * If the given Observable emits, an image will be captured and emitted through 'imageCapture' EventEmitter\r\n   */\r\n  @Input()\r\n  public set trigger(trigger: Observable<void>) {\r\n    if (this.triggerSubscription) {\r\n      this.triggerSubscription.unsubscribe();\r\n    }\r\n\r\n    // Subscribe to events from this Observable to take snapshots\r\n    this.triggerSubscription = trigger.subscribe(() => {\r\n      this.takeSnapshot();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * If the given Observable emits, the active webcam will be switched to the one indicated by the emitted value.\r\n   * @param switchCamera Indicates which webcam to switch to\r\n   *   true: cycle forwards through available webcams\r\n   *   false: cycle backwards through available webcams\r\n   *   string: activate the webcam with the given id\r\n   */\r\n  @Input()\r\n  public set switchCamera(switchCamera: Observable<boolean | string>) {\r\n    if (this.switchCameraSubscription) {\r\n      this.switchCameraSubscription.unsubscribe();\r\n    }\r\n\r\n    // Subscribe to events from this Observable to switch video device\r\n    this.switchCameraSubscription = switchCamera.subscribe((value: boolean | string) => {\r\n      if (typeof value === 'string') {\r\n        // deviceId was specified\r\n        this.switchToVideoInput(value);\r\n      } else {\r\n        // direction was specified\r\n        this.rotateVideoInput(value !== false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get MediaTrackConstraints to request streaming the given device\r\n   * @param deviceId\r\n   * @param baseMediaTrackConstraints base constraints to merge deviceId-constraint into\r\n   * @returns\r\n   */\r\n  private static getMediaConstraintsForDevice(deviceId: string, baseMediaTrackConstraints: MediaTrackConstraints): MediaTrackConstraints {\r\n    const result: MediaTrackConstraints = baseMediaTrackConstraints ? baseMediaTrackConstraints : this.DEFAULT_VIDEO_OPTIONS;\r\n    if (deviceId) {\r\n      result.deviceId = {exact: deviceId};\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Tries to harvest the deviceId from the given mediaStreamTrack object.\r\n   * Browsers populate this object differently; this method tries some different approaches\r\n   * to read the id.\r\n   * @param mediaStreamTrack\r\n   * @returns deviceId if found in the mediaStreamTrack\r\n   */\r\n  private static getDeviceIdFromMediaStreamTrack(mediaStreamTrack: MediaStreamTrack): string {\r\n    if (mediaStreamTrack.getSettings && mediaStreamTrack.getSettings() && mediaStreamTrack.getSettings().deviceId) {\r\n      return mediaStreamTrack.getSettings().deviceId;\r\n    } else if (mediaStreamTrack.getConstraints && mediaStreamTrack.getConstraints() && mediaStreamTrack.getConstraints().deviceId) {\r\n      const deviceIdObj: ConstrainDOMString = mediaStreamTrack.getConstraints().deviceId;\r\n      return WebcamComponent.getValueFromConstrainDOMString(deviceIdObj);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Tries to harvest the facingMode from the given mediaStreamTrack object.\r\n   * Browsers populate this object differently; this method tries some different approaches\r\n   * to read the value.\r\n   * @param mediaStreamTrack\r\n   * @returns facingMode if found in the mediaStreamTrack\r\n   */\r\n  private static getFacingModeFromMediaStreamTrack(mediaStreamTrack: MediaStreamTrack): string {\r\n    if (mediaStreamTrack) {\r\n      if (mediaStreamTrack.getSettings && mediaStreamTrack.getSettings() && mediaStreamTrack.getSettings().facingMode) {\r\n        return mediaStreamTrack.getSettings().facingMode;\r\n      } else if (mediaStreamTrack.getConstraints && mediaStreamTrack.getConstraints() && mediaStreamTrack.getConstraints().facingMode) {\r\n        const facingModeConstraint: ConstrainDOMString = mediaStreamTrack.getConstraints().facingMode;\r\n        return WebcamComponent.getValueFromConstrainDOMString(facingModeConstraint);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determines whether the given mediaStreamTrack claims itself as user facing\r\n   * @param mediaStreamTrack\r\n   */\r\n  private static isUserFacing(mediaStreamTrack: MediaStreamTrack): boolean {\r\n    const facingMode: string = WebcamComponent.getFacingModeFromMediaStreamTrack(mediaStreamTrack);\r\n    return facingMode ? 'user' === facingMode.toLowerCase() : false;\r\n  }\r\n\r\n  /**\r\n   * Extracts the value from the given ConstrainDOMString\r\n   * @param constrainDOMString\r\n   */\r\n  private static getValueFromConstrainDOMString(constrainDOMString: ConstrainDOMString): string {\r\n    if (constrainDOMString) {\r\n      if (constrainDOMString instanceof String) {\r\n        return String(constrainDOMString);\r\n      } else if (Array.isArray(constrainDOMString) && Array(constrainDOMString).length > 0) {\r\n        return String(constrainDOMString[0]);\r\n      } else if (typeof constrainDOMString === 'object') {\r\n        if (constrainDOMString['exact']) {\r\n          return String(constrainDOMString['exact']);\r\n        } else if (constrainDOMString['ideal']) {\r\n          return String(constrainDOMString['ideal']);\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.detectAvailableDevices()\r\n      .then(() => {\r\n        // start video\r\n        this.switchToVideoInput(null);\r\n      })\r\n      .catch((err: string) => {\r\n        this.initError.next(<WebcamInitError>{message: err});\r\n        // fallback: still try to load webcam, even if device enumeration failed\r\n        this.switchToVideoInput(null);\r\n      });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.stopMediaTracks();\r\n    this.unsubscribeFromSubscriptions();\r\n  }\r\n\r\n  /**\r\n   * Takes a snapshot of the current webcam's view and emits the image as an event\r\n   */\r\n  public takeSnapshot(): void {\r\n    // set canvas size to actual video size\r\n    const _video = this.nativeVideoElement;\r\n    const dimensions = {width: this.width, height: this.height};\r\n    if (_video.videoWidth) {\r\n      dimensions.width = _video.videoWidth;\r\n      dimensions.height = _video.videoHeight;\r\n    }\r\n\r\n    const _canvas = this.canvas.nativeElement;\r\n    _canvas.width = dimensions.width;\r\n    _canvas.height = dimensions.height;\r\n\r\n    // paint snapshot image to canvas\r\n    const context2d = _canvas.getContext('2d');\r\n    context2d.drawImage(_video, 0, 0);\r\n\r\n    // read canvas content as image\r\n    const mimeType: string = this.imageType ? this.imageType : WebcamComponent.DEFAULT_IMAGE_TYPE;\r\n    const quality: number = this.imageQuality ? this.imageQuality : WebcamComponent.DEFAULT_IMAGE_QUALITY;\r\n    const dataUrl: string = _canvas.toDataURL(mimeType, quality);\r\n\r\n    // get the ImageData object from the canvas' context.\r\n    let imageData: ImageData = null;\r\n\r\n    if (this.captureImageData) {\r\n      imageData = context2d.getImageData(0, 0, _canvas.width, _canvas.height);\r\n    }\r\n\r\n    this.imageCapture.next(new WebcamImage(dataUrl, mimeType, imageData));\r\n  }\r\n\r\n  /**\r\n   * Switches to the next/previous video device\r\n   * @param forward\r\n   */\r\n  public rotateVideoInput(forward: boolean) {\r\n    if (this.availableVideoInputs && this.availableVideoInputs.length > 1) {\r\n      const increment: number = forward ? 1 : (this.availableVideoInputs.length - 1);\r\n      const nextInputIndex = (this.activeVideoInputIndex + increment) % this.availableVideoInputs.length;\r\n      this.switchToVideoInput(this.availableVideoInputs[nextInputIndex].deviceId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Switches the camera-view to the specified video device\r\n   */\r\n  public switchToVideoInput(deviceId: string): void {\r\n    this.videoInitialized = false;\r\n    this.stopMediaTracks();\r\n    this.initWebcam(deviceId, this.videoOptions);\r\n  }\r\n\r\n\r\n  /**\r\n   * Event-handler for video resize event.\r\n   * Triggers Angular change detection so that new video dimensions get applied\r\n   */\r\n  public videoResize(): void {\r\n    // here to trigger Angular change detection\r\n  }\r\n\r\n  public get videoWidth() {\r\n    const videoRatio = this.getVideoAspectRatio();\r\n    return Math.min(this.width, this.height * videoRatio);\r\n  }\r\n\r\n  public get videoHeight() {\r\n    const videoRatio = this.getVideoAspectRatio();\r\n    return Math.min(this.height, this.width / videoRatio);\r\n  }\r\n\r\n  public get videoStyleClasses() {\r\n    let classes: string = '';\r\n\r\n    if (this.isMirrorImage()) {\r\n      classes += 'mirrored ';\r\n    }\r\n\r\n    return classes.trim();\r\n  }\r\n\r\n  public get nativeVideoElement() {\r\n    return this.video.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Returns the video aspect ratio of the active video stream\r\n   */\r\n  private getVideoAspectRatio(): number {\r\n    // calculate ratio from video element dimensions if present\r\n    const videoElement = this.nativeVideoElement;\r\n    if (videoElement.videoWidth && videoElement.videoWidth > 0 &&\r\n      videoElement.videoHeight && videoElement.videoHeight > 0) {\r\n\r\n      return videoElement.videoWidth / videoElement.videoHeight;\r\n    }\r\n\r\n    // nothing present - calculate ratio based on width/height params\r\n    return this.width / this.height;\r\n  }\r\n\r\n  /**\r\n   * Init webcam live view\r\n   */\r\n  private initWebcam(deviceId: string, userVideoTrackConstraints: MediaTrackConstraints) {\r\n    const _video = this.nativeVideoElement;\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n\r\n      // merge deviceId -> userVideoTrackConstraints\r\n      const videoTrackConstraints = WebcamComponent.getMediaConstraintsForDevice(deviceId, userVideoTrackConstraints);\r\n\r\n      navigator.mediaDevices.getUserMedia(<MediaStreamConstraints>{video: videoTrackConstraints})\r\n        .then((stream: MediaStream) => {\r\n          this.mediaStream = stream;\r\n          _video.srcObject = stream;\r\n          _video.play();\r\n\r\n          this.activeVideoSettings = stream.getVideoTracks()[0].getSettings();\r\n          const activeDeviceId: string = WebcamComponent.getDeviceIdFromMediaStreamTrack(stream.getVideoTracks()[0]);\r\n\r\n          this.cameraSwitched.next(activeDeviceId);\r\n\r\n          // Initial detect may run before user gave permissions, returning no deviceIds. This prevents later camera switches. (#47)\r\n          // Run detect once again within getUserMedia callback, to make sure this time we have permissions and get deviceIds.\r\n          this.detectAvailableDevices()\r\n            .then(() => {\r\n              this.activeVideoInputIndex = activeDeviceId ? this.availableVideoInputs\r\n                .findIndex((mediaDeviceInfo: MediaDeviceInfo) => mediaDeviceInfo.deviceId === activeDeviceId) : -1;\r\n              this.videoInitialized = true;\r\n            })\r\n            .catch(() => {\r\n              this.activeVideoInputIndex = -1;\r\n              this.videoInitialized = true;\r\n            });\r\n        })\r\n        .catch((err: MediaStreamError) => {\r\n          this.initError.next(<WebcamInitError>{message: err.message, mediaStreamError: err});\r\n        });\r\n    } else {\r\n      this.initError.next(<WebcamInitError>{message: 'Cannot read UserMedia from MediaDevices.'});\r\n    }\r\n  }\r\n\r\n  private getActiveVideoTrack(): MediaStreamTrack {\r\n    return this.mediaStream ? this.mediaStream.getVideoTracks()[0] : null;\r\n  }\r\n\r\n  private isMirrorImage(): boolean {\r\n    if (!this.getActiveVideoTrack()) {\r\n      return false;\r\n    }\r\n\r\n    // check for explicit mirror override parameter\r\n    {\r\n      let mirror: string = 'auto';\r\n      if (this.mirrorImage) {\r\n        if (typeof this.mirrorImage === 'string') {\r\n          mirror = String(this.mirrorImage).toLowerCase();\r\n        } else {\r\n          // WebcamMirrorProperties\r\n          if (this.mirrorImage.x) {\r\n            mirror = this.mirrorImage.x.toLowerCase();\r\n          }\r\n        }\r\n      }\r\n\r\n      switch (mirror) {\r\n        case 'always':\r\n          return true;\r\n        case 'never':\r\n          return false;\r\n      }\r\n    }\r\n\r\n    // default: enable mirroring if webcam is user facing\r\n    return WebcamComponent.isUserFacing(this.getActiveVideoTrack());\r\n  }\r\n\r\n  /**\r\n   * Stops all active media tracks.\r\n   * This prevents the webcam from being indicated as active,\r\n   * even if it is no longer used by this component.\r\n   */\r\n  private stopMediaTracks() {\r\n    if (this.mediaStream && this.mediaStream.getTracks) {\r\n      // getTracks() returns all media tracks (video+audio)\r\n      this.mediaStream.getTracks()\r\n        .forEach((track: MediaStreamTrack) => track.stop());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from all open subscriptions\r\n   */\r\n  private unsubscribeFromSubscriptions() {\r\n    if (this.triggerSubscription) {\r\n      this.triggerSubscription.unsubscribe();\r\n    }\r\n    if (this.switchCameraSubscription) {\r\n      this.switchCameraSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reads available input devices\r\n   */\r\n  private detectAvailableDevices(): Promise<MediaDeviceInfo[]> {\r\n    return new Promise((resolve, reject) => {\r\n      WebcamUtil.getAvailableVideoInputs()\r\n        .then((devices: MediaDeviceInfo[]) => {\r\n          this.availableVideoInputs = devices;\r\n          resolve(devices);\r\n        })\r\n        .catch(err => {\r\n          this.availableVideoInputs = [];\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {WebcamComponent} from './webcam/webcam.component';\n\nconst COMPONENTS = [\n  WebcamComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    COMPONENTS\n  ],\n  exports: [\n    COMPONENTS\n  ]\n})\nexport class WebcamModule {\n}\n","export class WebcamInitError {\r\n  public message: string = null;\r\n  public mediaStreamError: MediaStreamError = null;\r\n}\r\n","export class WebcamMirrorProperties {\r\n  public x: string;  // [\"auto\", \"always\", \"never\"]\r\n}\r\n"]}